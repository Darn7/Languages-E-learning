// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt   @id @default(autoincrement())
  email      String   @unique
  name       String?
  password   String
  avatar     Image    @relation(fields: [image_id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  courses_id Course[]
  image_id   BigInt
}

model Course {
  id          BigInt   @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author_id   BigInt
  authors     User     @relation(fields: [author_id], references: [id])
  lessons_id  Lesson[]
  reviews_id  Review[]
}

model Lesson {
  id          BigInt   @id @default(autoincrement())
  title       String
  description String
  video       String
  thumbnails  Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  course_id   BigInt
  courses     Course   @relation(fields: [course_id], references: [id])
}

model Review {
  id        BigInt   @id @default(autoincrement())
  title     String
  body      String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course_id BigInt
  courses   Course   @relation(fields: [course_id], references: [id])
}

model Image {
  id        BigInt   @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lesson_id BigInt
  lessons   Lesson   @relation(fields: [lesson_id], references: [id])
  user      User[]
}
